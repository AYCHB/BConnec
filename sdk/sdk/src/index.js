/**
 * Yapily API
 * To access endpoints that require authentication, use your Application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * OpenAPI spec version: 0.0.29
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient','Auth', 'model/ATMBranch', 'model/ATMGeoLocation', 'model/ATMGeographicCoordinates', 'model/ATMLocation', 'model/ATMLocationOtherLocationCategory', 'model/ATMMapServiceLinks', 'model/ATMOpenData', 'model/ATMOpenDataATM', 'model/ATMOpenDataBrand', 'model/ATMOpenDataOtherATMServices', 'model/ATMOpenDataOtherAccessibility', 'model/ATMOpenDataResponse', 'model/ATMPostalAddress', 'model/ATMSite', 'model/Account', 'model/AgeEligibility', 'model/ApiListResponseOfAccount', 'model/ApiListResponseOfFeatureDetails', 'model/ApiListResponseOfInstitution', 'model/ApiListResponseOfTransaction', 'model/ApiResponseOfAccount', 'model/ApiResponseOfIdentity', 'model/ApiResponseOfListOfATMOpenDataResponse', 'model/ApiResponseOfListOfPersonalCurrentAccountData', 'model/ApiResponseOfPaymentResponse', 'model/ApiResponseOfTransferResponse', 'model/Application', 'model/ApplicationUser', 'model/Consent', 'model/CoreProduct', 'model/Country', 'model/CreateConsentApiKey', 'model/CreditCheck', 'model/CreditInterest', 'model/CreditInterestCreditInterestEligibility', 'model/CreditInterestTierBand', 'model/CreditInterestTierBandSet', 'model/Eligibility', 'model/EligibilityOtherEligibility', 'model/FeatureDetails', 'model/IDVerificationCheck', 'model/Identity', 'model/IdentityAddress', 'model/Institution', 'model/InstitutionConsent', 'model/Media', 'model/NewApplicationUser', 'model/OtherApplicationFrequency', 'model/OtherBankInterestType', 'model/OtherCalculationFrequency', 'model/OtherFeeRateType', 'model/OtherFeeType', 'model/OtherResidencyType', 'model/OtherType', 'model/Overdraft', 'model/OverdraftFeeApplicableRange', 'model/OverdraftOtherFeeType', 'model/OverdraftOverdraftFeeChargeCap', 'model/OverdraftOverdraftFeeChargeDetail', 'model/OverdraftOverdraftFeesCharges', 'model/OverdraftOverdraftFeesCharges1', 'model/OverdraftOverdraftTierBand', 'model/OverdraftOverdraftTierBandSet', 'model/PaymentResponse', 'model/PersonalCurrentAccountBrand', 'model/PersonalCurrentAccountData', 'model/PersonalCurrentAccountPCA', 'model/PersonalCurrentAccountPCAMarketingState', 'model/ResidencyEligibility', 'model/ResponseMeta', 'model/SortCodePaymentRequest', 'model/Transaction', 'model/TransferRequest', 'model/TransferResponse', 'api/AccountsApi', 'api/ApplicationUsersApi', 'api/ApplicationsApi', 'api/ConsentsApi', 'api/IdentityApi', 'api/InstitutionsApi', 'api/InstitutionsOpenDataApi', 'api/PaymentsApi', 'api/TransactionsApi', 'api/TransfersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'),require('./Auth'), require('./model/ATMBranch'), require('./model/ATMGeoLocation'), require('./model/ATMGeographicCoordinates'), require('./model/ATMLocation'), require('./model/ATMLocationOtherLocationCategory'), require('./model/ATMMapServiceLinks'), require('./model/ATMOpenData'), require('./model/ATMOpenDataATM'), require('./model/ATMOpenDataBrand'), require('./model/ATMOpenDataOtherATMServices'), require('./model/ATMOpenDataOtherAccessibility'), require('./model/ATMOpenDataResponse'), require('./model/ATMPostalAddress'), require('./model/ATMSite'), require('./model/Account'), require('./model/AgeEligibility'), require('./model/ApiListResponseOfAccount'), require('./model/ApiListResponseOfFeatureDetails'), require('./model/ApiListResponseOfInstitution'), require('./model/ApiListResponseOfTransaction'), require('./model/ApiResponseOfAccount'), require('./model/ApiResponseOfIdentity'), require('./model/ApiResponseOfListOfATMOpenDataResponse'), require('./model/ApiResponseOfListOfPersonalCurrentAccountData'), require('./model/ApiResponseOfPaymentResponse'), require('./model/ApiResponseOfTransferResponse'), require('./model/Application'), require('./model/ApplicationUser'), require('./model/Consent'), require('./model/CoreProduct'), require('./model/Country'), require('./model/CreateConsentApiKey'), require('./model/CreditCheck'), require('./model/CreditInterest'), require('./model/CreditInterestCreditInterestEligibility'), require('./model/CreditInterestTierBand'), require('./model/CreditInterestTierBandSet'), require('./model/Eligibility'), require('./model/EligibilityOtherEligibility'), require('./model/FeatureDetails'), require('./model/IDVerificationCheck'), require('./model/Identity'), require('./model/IdentityAddress'), require('./model/Institution'), require('./model/InstitutionConsent'), require('./model/Media'), require('./model/NewApplicationUser'), require('./model/OtherApplicationFrequency'), require('./model/OtherBankInterestType'), require('./model/OtherCalculationFrequency'), require('./model/OtherFeeRateType'), require('./model/OtherFeeType'), require('./model/OtherResidencyType'), require('./model/OtherType'), require('./model/Overdraft'), require('./model/OverdraftFeeApplicableRange'), require('./model/OverdraftOtherFeeType'), require('./model/OverdraftOverdraftFeeChargeCap'), require('./model/OverdraftOverdraftFeeChargeDetail'), require('./model/OverdraftOverdraftFeesCharges'), require('./model/OverdraftOverdraftFeesCharges1'), require('./model/OverdraftOverdraftTierBand'), require('./model/OverdraftOverdraftTierBandSet'), require('./model/PaymentResponse'), require('./model/PersonalCurrentAccountBrand'), require('./model/PersonalCurrentAccountData'), require('./model/PersonalCurrentAccountPCA'), require('./model/PersonalCurrentAccountPCAMarketingState'), require('./model/ResidencyEligibility'), require('./model/ResponseMeta'), require('./model/SortCodePaymentRequest'), require('./model/Transaction'), require('./model/TransferRequest'), require('./model/TransferResponse'), require('./api/AccountsApi'), require('./api/ApplicationUsersApi'), require('./api/ApplicationsApi'), require('./api/ConsentsApi'), require('./api/IdentityApi'), require('./api/InstitutionsApi'), require('./api/InstitutionsOpenDataApi'), require('./api/PaymentsApi'), require('./api/TransactionsApi'), require('./api/TransfersApi'));
  }
}(function(ApiClient,Auth, ATMBranch, ATMGeoLocation, ATMGeographicCoordinates, ATMLocation, ATMLocationOtherLocationCategory, ATMMapServiceLinks, ATMOpenData, ATMOpenDataATM, ATMOpenDataBrand, ATMOpenDataOtherATMServices, ATMOpenDataOtherAccessibility, ATMOpenDataResponse, ATMPostalAddress, ATMSite, Account, AgeEligibility, ApiListResponseOfAccount, ApiListResponseOfFeatureDetails, ApiListResponseOfInstitution, ApiListResponseOfTransaction, ApiResponseOfAccount, ApiResponseOfIdentity, ApiResponseOfListOfATMOpenDataResponse, ApiResponseOfListOfPersonalCurrentAccountData, ApiResponseOfPaymentResponse, ApiResponseOfTransferResponse, Application, ApplicationUser, Consent, CoreProduct, Country, CreateConsentApiKey, CreditCheck, CreditInterest, CreditInterestCreditInterestEligibility, CreditInterestTierBand, CreditInterestTierBandSet, Eligibility, EligibilityOtherEligibility, FeatureDetails, IDVerificationCheck, Identity, IdentityAddress, Institution, InstitutionConsent, Media, NewApplicationUser, OtherApplicationFrequency, OtherBankInterestType, OtherCalculationFrequency, OtherFeeRateType, OtherFeeType, OtherResidencyType, OtherType, Overdraft, OverdraftFeeApplicableRange, OverdraftOtherFeeType, OverdraftOverdraftFeeChargeCap, OverdraftOverdraftFeeChargeDetail, OverdraftOverdraftFeesCharges, OverdraftOverdraftFeesCharges1, OverdraftOverdraftTierBand, OverdraftOverdraftTierBandSet, PaymentResponse, PersonalCurrentAccountBrand, PersonalCurrentAccountData, PersonalCurrentAccountPCA, PersonalCurrentAccountPCAMarketingState, ResidencyEligibility, ResponseMeta, SortCodePaymentRequest, Transaction, TransferRequest, TransferResponse, AccountsApi, ApplicationUsersApi, ApplicationsApi, ConsentsApi, IdentityApi, InstitutionsApi, InstitutionsOpenDataApi, PaymentsApi, TransactionsApi, TransfersApi) {
  'use strict';

  /**
   * To_access_endpoints_that_require_authentication_use_your_Application_key_and_secret_created_in_the_Dashboard__httpsdashboard_yapily_com.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var YapilyApi = require('index'); // See note below*.
   * var xxxSvc = new YapilyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new YapilyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new YapilyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new YapilyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.29
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    Auth: Auth,
    /**
     * The ATMBranch model constructor.
     * @property {module:model/ATMBranch}
     */
    ATMBranch: ATMBranch,
    /**
     * The ATMGeoLocation model constructor.
     * @property {module:model/ATMGeoLocation}
     */
    ATMGeoLocation: ATMGeoLocation,
    /**
     * The ATMGeographicCoordinates model constructor.
     * @property {module:model/ATMGeographicCoordinates}
     */
    ATMGeographicCoordinates: ATMGeographicCoordinates,
    /**
     * The ATMLocation model constructor.
     * @property {module:model/ATMLocation}
     */
    ATMLocation: ATMLocation,
    /**
     * The ATMLocationOtherLocationCategory model constructor.
     * @property {module:model/ATMLocationOtherLocationCategory}
     */
    ATMLocationOtherLocationCategory: ATMLocationOtherLocationCategory,
    /**
     * The ATMMapServiceLinks model constructor.
     * @property {module:model/ATMMapServiceLinks}
     */
    ATMMapServiceLinks: ATMMapServiceLinks,
    /**
     * The ATMOpenData model constructor.
     * @property {module:model/ATMOpenData}
     */
    ATMOpenData: ATMOpenData,
    /**
     * The ATMOpenDataATM model constructor.
     * @property {module:model/ATMOpenDataATM}
     */
    ATMOpenDataATM: ATMOpenDataATM,
    /**
     * The ATMOpenDataBrand model constructor.
     * @property {module:model/ATMOpenDataBrand}
     */
    ATMOpenDataBrand: ATMOpenDataBrand,
    /**
     * The ATMOpenDataOtherATMServices model constructor.
     * @property {module:model/ATMOpenDataOtherATMServices}
     */
    ATMOpenDataOtherATMServices: ATMOpenDataOtherATMServices,
    /**
     * The ATMOpenDataOtherAccessibility model constructor.
     * @property {module:model/ATMOpenDataOtherAccessibility}
     */
    ATMOpenDataOtherAccessibility: ATMOpenDataOtherAccessibility,
    /**
     * The ATMOpenDataResponse model constructor.
     * @property {module:model/ATMOpenDataResponse}
     */
    ATMOpenDataResponse: ATMOpenDataResponse,
    /**
     * The ATMPostalAddress model constructor.
     * @property {module:model/ATMPostalAddress}
     */
    ATMPostalAddress: ATMPostalAddress,
    /**
     * The ATMSite model constructor.
     * @property {module:model/ATMSite}
     */
    ATMSite: ATMSite,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The AgeEligibility model constructor.
     * @property {module:model/AgeEligibility}
     */
    AgeEligibility: AgeEligibility,
    /**
     * The ApiListResponseOfAccount model constructor.
     * @property {module:model/ApiListResponseOfAccount}
     */
    ApiListResponseOfAccount: ApiListResponseOfAccount,
    /**
     * The ApiListResponseOfFeatureDetails model constructor.
     * @property {module:model/ApiListResponseOfFeatureDetails}
     */
    ApiListResponseOfFeatureDetails: ApiListResponseOfFeatureDetails,
    /**
     * The ApiListResponseOfInstitution model constructor.
     * @property {module:model/ApiListResponseOfInstitution}
     */
    ApiListResponseOfInstitution: ApiListResponseOfInstitution,
    /**
     * The ApiListResponseOfTransaction model constructor.
     * @property {module:model/ApiListResponseOfTransaction}
     */
    ApiListResponseOfTransaction: ApiListResponseOfTransaction,
    /**
     * The ApiResponseOfAccount model constructor.
     * @property {module:model/ApiResponseOfAccount}
     */
    ApiResponseOfAccount: ApiResponseOfAccount,
    /**
     * The ApiResponseOfIdentity model constructor.
     * @property {module:model/ApiResponseOfIdentity}
     */
    ApiResponseOfIdentity: ApiResponseOfIdentity,
    /**
     * The ApiResponseOfListOfATMOpenDataResponse model constructor.
     * @property {module:model/ApiResponseOfListOfATMOpenDataResponse}
     */
    ApiResponseOfListOfATMOpenDataResponse: ApiResponseOfListOfATMOpenDataResponse,
    /**
     * The ApiResponseOfListOfPersonalCurrentAccountData model constructor.
     * @property {module:model/ApiResponseOfListOfPersonalCurrentAccountData}
     */
    ApiResponseOfListOfPersonalCurrentAccountData: ApiResponseOfListOfPersonalCurrentAccountData,
    /**
     * The ApiResponseOfPaymentResponse model constructor.
     * @property {module:model/ApiResponseOfPaymentResponse}
     */
    ApiResponseOfPaymentResponse: ApiResponseOfPaymentResponse,
    /**
     * The ApiResponseOfTransferResponse model constructor.
     * @property {module:model/ApiResponseOfTransferResponse}
     */
    ApiResponseOfTransferResponse: ApiResponseOfTransferResponse,
    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application: Application,
    /**
     * The ApplicationUser model constructor.
     * @property {module:model/ApplicationUser}
     */
    ApplicationUser: ApplicationUser,
    /**
     * The Consent model constructor.
     * @property {module:model/Consent}
     */
    Consent: Consent,
    /**
     * The CoreProduct model constructor.
     * @property {module:model/CoreProduct}
     */
    CoreProduct: CoreProduct,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The CreateConsentApiKey model constructor.
     * @property {module:model/CreateConsentApiKey}
     */
    CreateConsentApiKey: CreateConsentApiKey,
    /**
     * The CreditCheck model constructor.
     * @property {module:model/CreditCheck}
     */
    CreditCheck: CreditCheck,
    /**
     * The CreditInterest model constructor.
     * @property {module:model/CreditInterest}
     */
    CreditInterest: CreditInterest,
    /**
     * The CreditInterestCreditInterestEligibility model constructor.
     * @property {module:model/CreditInterestCreditInterestEligibility}
     */
    CreditInterestCreditInterestEligibility: CreditInterestCreditInterestEligibility,
    /**
     * The CreditInterestTierBand model constructor.
     * @property {module:model/CreditInterestTierBand}
     */
    CreditInterestTierBand: CreditInterestTierBand,
    /**
     * The CreditInterestTierBandSet model constructor.
     * @property {module:model/CreditInterestTierBandSet}
     */
    CreditInterestTierBandSet: CreditInterestTierBandSet,
    /**
     * The Eligibility model constructor.
     * @property {module:model/Eligibility}
     */
    Eligibility: Eligibility,
    /**
     * The EligibilityOtherEligibility model constructor.
     * @property {module:model/EligibilityOtherEligibility}
     */
    EligibilityOtherEligibility: EligibilityOtherEligibility,
    /**
     * The FeatureDetails model constructor.
     * @property {module:model/FeatureDetails}
     */
    FeatureDetails: FeatureDetails,
    /**
     * The IDVerificationCheck model constructor.
     * @property {module:model/IDVerificationCheck}
     */
    IDVerificationCheck: IDVerificationCheck,
    /**
     * The Identity model constructor.
     * @property {module:model/Identity}
     */
    Identity: Identity,
    /**
     * The IdentityAddress model constructor.
     * @property {module:model/IdentityAddress}
     */
    IdentityAddress: IdentityAddress,
    /**
     * The Institution model constructor.
     * @property {module:model/Institution}
     */
    Institution: Institution,
    /**
     * The InstitutionConsent model constructor.
     * @property {module:model/InstitutionConsent}
     */
    InstitutionConsent: InstitutionConsent,
    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media: Media,
    /**
     * The NewApplicationUser model constructor.
     * @property {module:model/NewApplicationUser}
     */
    NewApplicationUser: NewApplicationUser,
    /**
     * The OtherApplicationFrequency model constructor.
     * @property {module:model/OtherApplicationFrequency}
     */
    OtherApplicationFrequency: OtherApplicationFrequency,
    /**
     * The OtherBankInterestType model constructor.
     * @property {module:model/OtherBankInterestType}
     */
    OtherBankInterestType: OtherBankInterestType,
    /**
     * The OtherCalculationFrequency model constructor.
     * @property {module:model/OtherCalculationFrequency}
     */
    OtherCalculationFrequency: OtherCalculationFrequency,
    /**
     * The OtherFeeRateType model constructor.
     * @property {module:model/OtherFeeRateType}
     */
    OtherFeeRateType: OtherFeeRateType,
    /**
     * The OtherFeeType model constructor.
     * @property {module:model/OtherFeeType}
     */
    OtherFeeType: OtherFeeType,
    /**
     * The OtherResidencyType model constructor.
     * @property {module:model/OtherResidencyType}
     */
    OtherResidencyType: OtherResidencyType,
    /**
     * The OtherType model constructor.
     * @property {module:model/OtherType}
     */
    OtherType: OtherType,
    /**
     * The Overdraft model constructor.
     * @property {module:model/Overdraft}
     */
    Overdraft: Overdraft,
    /**
     * The OverdraftFeeApplicableRange model constructor.
     * @property {module:model/OverdraftFeeApplicableRange}
     */
    OverdraftFeeApplicableRange: OverdraftFeeApplicableRange,
    /**
     * The OverdraftOtherFeeType model constructor.
     * @property {module:model/OverdraftOtherFeeType}
     */
    OverdraftOtherFeeType: OverdraftOtherFeeType,
    /**
     * The OverdraftOverdraftFeeChargeCap model constructor.
     * @property {module:model/OverdraftOverdraftFeeChargeCap}
     */
    OverdraftOverdraftFeeChargeCap: OverdraftOverdraftFeeChargeCap,
    /**
     * The OverdraftOverdraftFeeChargeDetail model constructor.
     * @property {module:model/OverdraftOverdraftFeeChargeDetail}
     */
    OverdraftOverdraftFeeChargeDetail: OverdraftOverdraftFeeChargeDetail,
    /**
     * The OverdraftOverdraftFeesCharges model constructor.
     * @property {module:model/OverdraftOverdraftFeesCharges}
     */
    OverdraftOverdraftFeesCharges: OverdraftOverdraftFeesCharges,
    /**
     * The OverdraftOverdraftFeesCharges1 model constructor.
     * @property {module:model/OverdraftOverdraftFeesCharges1}
     */
    OverdraftOverdraftFeesCharges1: OverdraftOverdraftFeesCharges1,
    /**
     * The OverdraftOverdraftTierBand model constructor.
     * @property {module:model/OverdraftOverdraftTierBand}
     */
    OverdraftOverdraftTierBand: OverdraftOverdraftTierBand,
    /**
     * The OverdraftOverdraftTierBandSet model constructor.
     * @property {module:model/OverdraftOverdraftTierBandSet}
     */
    OverdraftOverdraftTierBandSet: OverdraftOverdraftTierBandSet,
    /**
     * The PaymentResponse model constructor.
     * @property {module:model/PaymentResponse}
     */
    PaymentResponse: PaymentResponse,
    /**
     * The PersonalCurrentAccountBrand model constructor.
     * @property {module:model/PersonalCurrentAccountBrand}
     */
    PersonalCurrentAccountBrand: PersonalCurrentAccountBrand,
    /**
     * The PersonalCurrentAccountData model constructor.
     * @property {module:model/PersonalCurrentAccountData}
     */
    PersonalCurrentAccountData: PersonalCurrentAccountData,
    /**
     * The PersonalCurrentAccountPCA model constructor.
     * @property {module:model/PersonalCurrentAccountPCA}
     */
    PersonalCurrentAccountPCA: PersonalCurrentAccountPCA,
    /**
     * The PersonalCurrentAccountPCAMarketingState model constructor.
     * @property {module:model/PersonalCurrentAccountPCAMarketingState}
     */
    PersonalCurrentAccountPCAMarketingState: PersonalCurrentAccountPCAMarketingState,
    /**
     * The ResidencyEligibility model constructor.
     * @property {module:model/ResidencyEligibility}
     */
    ResidencyEligibility: ResidencyEligibility,
    /**
     * The ResponseMeta model constructor.
     * @property {module:model/ResponseMeta}
     */
    ResponseMeta: ResponseMeta,
    /**
     * The SortCodePaymentRequest model constructor.
     * @property {module:model/SortCodePaymentRequest}
     */
    SortCodePaymentRequest: SortCodePaymentRequest,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The TransferRequest model constructor.
     * @property {module:model/TransferRequest}
     */
    TransferRequest: TransferRequest,
    /**
     * The TransferResponse model constructor.
     * @property {module:model/TransferResponse}
     */
    TransferResponse: TransferResponse,
    /**
     * The AccountsApi service constructor.
     * @property {module:api/AccountsApi}
     */
    AccountsApi: AccountsApi,
    /**
     * The ApplicationUsersApi service constructor.
     * @property {module:api/ApplicationUsersApi}
     */
    ApplicationUsersApi: ApplicationUsersApi,
    /**
     * The ApplicationsApi service constructor.
     * @property {module:api/ApplicationsApi}
     */
    ApplicationsApi: ApplicationsApi,
    /**
     * The ConsentsApi service constructor.
     * @property {module:api/ConsentsApi}
     */
    ConsentsApi: ConsentsApi,
    /**
     * The IdentityApi service constructor.
     * @property {module:api/IdentityApi}
     */
    IdentityApi: IdentityApi,
    /**
     * The InstitutionsApi service constructor.
     * @property {module:api/InstitutionsApi}
     */
    InstitutionsApi: InstitutionsApi,
    /**
     * The InstitutionsOpenDataApi service constructor.
     * @property {module:api/InstitutionsOpenDataApi}
     */
    InstitutionsOpenDataApi: InstitutionsOpenDataApi,
    /**
     * The PaymentsApi service constructor.
     * @property {module:api/PaymentsApi}
     */
    PaymentsApi: PaymentsApi,
    /**
     * The TransactionsApi service constructor.
     * @property {module:api/TransactionsApi}
     */
    TransactionsApi: TransactionsApi,
    /**
     * The TransfersApi service constructor.
     * @property {module:api/TransfersApi}
     */
    TransfersApi: TransfersApi
  };

  return exports;
}));
