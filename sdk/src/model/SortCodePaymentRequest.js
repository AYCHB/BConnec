/**
 * Yapily API
 * To access endpoints that require authentication, use your application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * The version of the OpenAPI document: 0.0.161
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MerchantInfo from './MerchantInfo';

/**
 * The SortCodePaymentRequest model module.
 * @module model/SortCodePaymentRequest
 * @version 0.0.161
 */
class SortCodePaymentRequest {
    /**
     * Constructs a new <code>SortCodePaymentRequest</code>.
     * @alias module:model/SortCodePaymentRequest
     * @param name {String} 
     * @param amount {Number} 
     * @param currency {String} 
     * @param reference {String} 
     * @param country {String} 
     * @param accountNumber {String} 
     * @param sortCode {String} 
     */
    constructor(name, amount, currency, reference, country, accountNumber, sortCode) { 
        
        SortCodePaymentRequest.initialize(this, name, amount, currency, reference, country, accountNumber, sortCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, amount, currency, reference, country, accountNumber, sortCode) { 
        obj['name'] = name;
        obj['amount'] = amount;
        obj['currency'] = currency;
        obj['reference'] = reference;
        obj['country'] = country;
        obj['accountNumber'] = accountNumber;
        obj['sortCode'] = sortCode;
    }

    /**
     * Constructs a <code>SortCodePaymentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SortCodePaymentRequest} obj Optional instance to populate.
     * @return {module:model/SortCodePaymentRequest} The populated <code>SortCodePaymentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SortCodePaymentRequest();

            if (data.hasOwnProperty('senderAccountId')) {
                obj['senderAccountId'] = ApiClient.convertToType(data['senderAccountId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('accountNumber')) {
                obj['accountNumber'] = ApiClient.convertToType(data['accountNumber'], 'String');
            }
            if (data.hasOwnProperty('sortCode')) {
                obj['sortCode'] = ApiClient.convertToType(data['sortCode'], 'String');
            }
            if (data.hasOwnProperty('merchantInfo')) {
                obj['merchantInfo'] = MerchantInfo.constructFromObject(data['merchantInfo']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} senderAccountId
 */
SortCodePaymentRequest.prototype['senderAccountId'] = undefined;

/**
 * @member {String} name
 */
SortCodePaymentRequest.prototype['name'] = undefined;

/**
 * @member {Number} amount
 */
SortCodePaymentRequest.prototype['amount'] = undefined;

/**
 * @member {String} currency
 */
SortCodePaymentRequest.prototype['currency'] = undefined;

/**
 * @member {String} reference
 */
SortCodePaymentRequest.prototype['reference'] = undefined;

/**
 * @member {String} country
 */
SortCodePaymentRequest.prototype['country'] = undefined;

/**
 * @member {module:model/SortCodePaymentRequest.TypeEnum} type
 */
SortCodePaymentRequest.prototype['type'] = undefined;

/**
 * @member {String} accountNumber
 */
SortCodePaymentRequest.prototype['accountNumber'] = undefined;

/**
 * @member {String} sortCode
 */
SortCodePaymentRequest.prototype['sortCode'] = undefined;

/**
 * @member {module:model/MerchantInfo} merchantInfo
 */
SortCodePaymentRequest.prototype['merchantInfo'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
SortCodePaymentRequest['TypeEnum'] = {

    /**
     * value: "BILL"
     * @const
     */
    "BILL": "BILL",

    /**
     * value: "GOODS"
     * @const
     */
    "GOODS": "GOODS",

    /**
     * value: "SERVICES"
     * @const
     */
    "SERVICES": "SERVICES",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER",

    /**
     * value: "PERSON_TO_PERSON"
     * @const
     */
    "PERSON_TO_PERSON": "PERSON_TO_PERSON"
};



export default SortCodePaymentRequest;

