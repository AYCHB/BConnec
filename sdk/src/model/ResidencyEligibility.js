/**
 * Yapily API
 * To access endpoints that require authentication, use your application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * The version of the OpenAPI document: 0.0.161
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OtherResidencyType from './OtherResidencyType';

/**
 * The ResidencyEligibility model module.
 * @module model/ResidencyEligibility
 * @version 0.0.161
 */
class ResidencyEligibility {
    /**
     * Constructs a new <code>ResidencyEligibility</code>.
     * Countries in which an accountholder can reside and, therefore, be eligible to open an account
     * @alias module:model/ResidencyEligibility
     */
    constructor() { 
        
        ResidencyEligibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResidencyEligibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResidencyEligibility} obj Optional instance to populate.
     * @return {module:model/ResidencyEligibility} The populated <code>ResidencyEligibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResidencyEligibility();

            if (data.hasOwnProperty('Notes')) {
                obj['Notes'] = ApiClient.convertToType(data['Notes'], ['String']);
            }
            if (data.hasOwnProperty('OtherResidencyType')) {
                obj['OtherResidencyType'] = OtherResidencyType.constructFromObject(data['OtherResidencyType']);
            }
            if (data.hasOwnProperty('ResidencyIncluded')) {
                obj['ResidencyIncluded'] = ApiClient.convertToType(data['ResidencyIncluded'], ['String']);
            }
            if (data.hasOwnProperty('ResidencyType')) {
                obj['ResidencyType'] = ApiClient.convertToType(data['ResidencyType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} Notes
 */
ResidencyEligibility.prototype['Notes'] = undefined;

/**
 * @member {module:model/OtherResidencyType} OtherResidencyType
 */
ResidencyEligibility.prototype['OtherResidencyType'] = undefined;

/**
 * @member {Array.<String>} ResidencyIncluded
 */
ResidencyEligibility.prototype['ResidencyIncluded'] = undefined;

/**
 * @member {module:model/ResidencyEligibility.ResidencyTypeEnum} ResidencyType
 */
ResidencyEligibility.prototype['ResidencyType'] = undefined;





/**
 * Allowed values for the <code>ResidencyType</code> property.
 * @enum {String}
 * @readonly
 */
ResidencyEligibility['ResidencyTypeEnum'] = {

    /**
     * value: "Householder"
     * @const
     */
    "Householder": "Householder",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other"
};



export default ResidencyEligibility;

