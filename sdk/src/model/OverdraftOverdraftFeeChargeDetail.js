/**
 * Yapily API
 * To access endpoints that require authentication, use your application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * The version of the OpenAPI document: 0.0.161
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OtherApplicationFrequency from './OtherApplicationFrequency';
import OtherCalculationFrequency from './OtherCalculationFrequency';
import OtherFeeRateType from './OtherFeeRateType';
import OtherFeeType from './OtherFeeType';
import OverdraftOverdraftFeeChargeCap from './OverdraftOverdraftFeeChargeCap';

/**
 * The OverdraftOverdraftFeeChargeDetail model module.
 * @module model/OverdraftOverdraftFeeChargeDetail
 * @version 0.0.161
 */
class OverdraftOverdraftFeeChargeDetail {
    /**
     * Constructs a new <code>OverdraftOverdraftFeeChargeDetail</code>.
     * Details about the fees/charges
     * @alias module:model/OverdraftOverdraftFeeChargeDetail
     */
    constructor() { 
        
        OverdraftOverdraftFeeChargeDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OverdraftOverdraftFeeChargeDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OverdraftOverdraftFeeChargeDetail} obj Optional instance to populate.
     * @return {module:model/OverdraftOverdraftFeeChargeDetail} The populated <code>OverdraftOverdraftFeeChargeDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OverdraftOverdraftFeeChargeDetail();

            if (data.hasOwnProperty('ApplicationFrequency')) {
                obj['ApplicationFrequency'] = ApiClient.convertToType(data['ApplicationFrequency'], 'String');
            }
            if (data.hasOwnProperty('CalculationFrequency')) {
                obj['CalculationFrequency'] = ApiClient.convertToType(data['CalculationFrequency'], 'String');
            }
            if (data.hasOwnProperty('FeeAmount')) {
                obj['FeeAmount'] = ApiClient.convertToType(data['FeeAmount'], 'String');
            }
            if (data.hasOwnProperty('FeeRate')) {
                obj['FeeRate'] = ApiClient.convertToType(data['FeeRate'], 'String');
            }
            if (data.hasOwnProperty('FeeRateType')) {
                obj['FeeRateType'] = ApiClient.convertToType(data['FeeRateType'], 'String');
            }
            if (data.hasOwnProperty('FeeType')) {
                obj['FeeType'] = ApiClient.convertToType(data['FeeType'], 'String');
            }
            if (data.hasOwnProperty('IncrementalBorrowingAmount')) {
                obj['IncrementalBorrowingAmount'] = ApiClient.convertToType(data['IncrementalBorrowingAmount'], 'String');
            }
            if (data.hasOwnProperty('Notes')) {
                obj['Notes'] = ApiClient.convertToType(data['Notes'], ['String']);
            }
            if (data.hasOwnProperty('OtherApplicationFrequency')) {
                obj['OtherApplicationFrequency'] = OtherApplicationFrequency.constructFromObject(data['OtherApplicationFrequency']);
            }
            if (data.hasOwnProperty('OtherCalculationFrequency')) {
                obj['OtherCalculationFrequency'] = OtherCalculationFrequency.constructFromObject(data['OtherCalculationFrequency']);
            }
            if (data.hasOwnProperty('OtherFeeRateType')) {
                obj['OtherFeeRateType'] = OtherFeeRateType.constructFromObject(data['OtherFeeRateType']);
            }
            if (data.hasOwnProperty('OtherFeeType')) {
                obj['OtherFeeType'] = OtherFeeType.constructFromObject(data['OtherFeeType']);
            }
            if (data.hasOwnProperty('OverdraftControlIndicator')) {
                obj['OverdraftControlIndicator'] = ApiClient.convertToType(data['OverdraftControlIndicator'], 'Boolean');
            }
            if (data.hasOwnProperty('OverdraftFeeChargeCap')) {
                obj['OverdraftFeeChargeCap'] = OverdraftOverdraftFeeChargeCap.constructFromObject(data['OverdraftFeeChargeCap']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/OverdraftOverdraftFeeChargeDetail.ApplicationFrequencyEnum} ApplicationFrequency
 */
OverdraftOverdraftFeeChargeDetail.prototype['ApplicationFrequency'] = undefined;

/**
 * @member {module:model/OverdraftOverdraftFeeChargeDetail.CalculationFrequencyEnum} CalculationFrequency
 */
OverdraftOverdraftFeeChargeDetail.prototype['CalculationFrequency'] = undefined;

/**
 * @member {String} FeeAmount
 */
OverdraftOverdraftFeeChargeDetail.prototype['FeeAmount'] = undefined;

/**
 * @member {String} FeeRate
 */
OverdraftOverdraftFeeChargeDetail.prototype['FeeRate'] = undefined;

/**
 * @member {module:model/OverdraftOverdraftFeeChargeDetail.FeeRateTypeEnum} FeeRateType
 */
OverdraftOverdraftFeeChargeDetail.prototype['FeeRateType'] = undefined;

/**
 * @member {module:model/OverdraftOverdraftFeeChargeDetail.FeeTypeEnum} FeeType
 */
OverdraftOverdraftFeeChargeDetail.prototype['FeeType'] = undefined;

/**
 * @member {String} IncrementalBorrowingAmount
 */
OverdraftOverdraftFeeChargeDetail.prototype['IncrementalBorrowingAmount'] = undefined;

/**
 * @member {Array.<String>} Notes
 */
OverdraftOverdraftFeeChargeDetail.prototype['Notes'] = undefined;

/**
 * @member {module:model/OtherApplicationFrequency} OtherApplicationFrequency
 */
OverdraftOverdraftFeeChargeDetail.prototype['OtherApplicationFrequency'] = undefined;

/**
 * @member {module:model/OtherCalculationFrequency} OtherCalculationFrequency
 */
OverdraftOverdraftFeeChargeDetail.prototype['OtherCalculationFrequency'] = undefined;

/**
 * @member {module:model/OtherFeeRateType} OtherFeeRateType
 */
OverdraftOverdraftFeeChargeDetail.prototype['OtherFeeRateType'] = undefined;

/**
 * @member {module:model/OtherFeeType} OtherFeeType
 */
OverdraftOverdraftFeeChargeDetail.prototype['OtherFeeType'] = undefined;

/**
 * @member {Boolean} OverdraftControlIndicator
 */
OverdraftOverdraftFeeChargeDetail.prototype['OverdraftControlIndicator'] = undefined;

/**
 * @member {module:model/OverdraftOverdraftFeeChargeCap} OverdraftFeeChargeCap
 */
OverdraftOverdraftFeeChargeDetail.prototype['OverdraftFeeChargeCap'] = undefined;





/**
 * Allowed values for the <code>ApplicationFrequency</code> property.
 * @enum {String}
 * @readonly
 */
OverdraftOverdraftFeeChargeDetail['ApplicationFrequencyEnum'] = {

    /**
     * value: "AccountClosing"
     * @const
     */
    "AccountClosing": "AccountClosing",

    /**
     * value: "AccountOpening"
     * @const
     */
    "AccountOpening": "AccountOpening",

    /**
     * value: "AcademicTerm"
     * @const
     */
    "AcademicTerm": "AcademicTerm",

    /**
     * value: "ChargingPeriod"
     * @const
     */
    "ChargingPeriod": "ChargingPeriod",

    /**
     * value: "Daily"
     * @const
     */
    "Daily": "Daily",

    /**
     * value: "PerItem"
     * @const
     */
    "PerItem": "PerItem",

    /**
     * value: "Monthly"
     * @const
     */
    "Monthly": "Monthly",

    /**
     * value: "OnAccountAnniversary"
     * @const
     */
    "OnAccountAnniversary": "OnAccountAnniversary",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other",

    /**
     * value: "PerHour"
     * @const
     */
    "PerHour": "PerHour",

    /**
     * value: "PerOccurrence"
     * @const
     */
    "PerOccurrence": "PerOccurrence",

    /**
     * value: "PerSheet"
     * @const
     */
    "PerSheet": "PerSheet",

    /**
     * value: "PerTransaction"
     * @const
     */
    "PerTransaction": "PerTransaction",

    /**
     * value: "PerTransactionAmount"
     * @const
     */
    "PerTransactionAmount": "PerTransactionAmount",

    /**
     * value: "PerTransactionPercentage"
     * @const
     */
    "PerTransactionPercentage": "PerTransactionPercentage",

    /**
     * value: "Quarterly"
     * @const
     */
    "Quarterly": "Quarterly",

    /**
     * value: "SixMonthly"
     * @const
     */
    "SixMonthly": "SixMonthly",

    /**
     * value: "StatementMonthly"
     * @const
     */
    "StatementMonthly": "StatementMonthly",

    /**
     * value: "Weekly"
     * @const
     */
    "Weekly": "Weekly",

    /**
     * value: "Yearly"
     * @const
     */
    "Yearly": "Yearly"
};


/**
 * Allowed values for the <code>CalculationFrequency</code> property.
 * @enum {String}
 * @readonly
 */
OverdraftOverdraftFeeChargeDetail['CalculationFrequencyEnum'] = {

    /**
     * value: "AccountClosing"
     * @const
     */
    "AccountClosing": "AccountClosing",

    /**
     * value: "AccountOpening"
     * @const
     */
    "AccountOpening": "AccountOpening",

    /**
     * value: "AcademicTerm"
     * @const
     */
    "AcademicTerm": "AcademicTerm",

    /**
     * value: "ChargingPeriod"
     * @const
     */
    "ChargingPeriod": "ChargingPeriod",

    /**
     * value: "Daily"
     * @const
     */
    "Daily": "Daily",

    /**
     * value: "PerItem"
     * @const
     */
    "PerItem": "PerItem",

    /**
     * value: "Monthly"
     * @const
     */
    "Monthly": "Monthly",

    /**
     * value: "OnAccountAnniversary"
     * @const
     */
    "OnAccountAnniversary": "OnAccountAnniversary",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other",

    /**
     * value: "PerHour"
     * @const
     */
    "PerHour": "PerHour",

    /**
     * value: "PerOccurrence"
     * @const
     */
    "PerOccurrence": "PerOccurrence",

    /**
     * value: "PerSheet"
     * @const
     */
    "PerSheet": "PerSheet",

    /**
     * value: "PerTransaction"
     * @const
     */
    "PerTransaction": "PerTransaction",

    /**
     * value: "PerTransactionAmount"
     * @const
     */
    "PerTransactionAmount": "PerTransactionAmount",

    /**
     * value: "PerTransactionPercentage"
     * @const
     */
    "PerTransactionPercentage": "PerTransactionPercentage",

    /**
     * value: "Quarterly"
     * @const
     */
    "Quarterly": "Quarterly",

    /**
     * value: "SixMonthly"
     * @const
     */
    "SixMonthly": "SixMonthly",

    /**
     * value: "StatementMonthly"
     * @const
     */
    "StatementMonthly": "StatementMonthly",

    /**
     * value: "Weekly"
     * @const
     */
    "Weekly": "Weekly",

    /**
     * value: "Yearly"
     * @const
     */
    "Yearly": "Yearly"
};


/**
 * Allowed values for the <code>FeeRateType</code> property.
 * @enum {String}
 * @readonly
 */
OverdraftOverdraftFeeChargeDetail['FeeRateTypeEnum'] = {

    /**
     * value: "LinkedBaseRate"
     * @const
     */
    "LinkedBaseRate": "LinkedBaseRate",

    /**
     * value: "Gross"
     * @const
     */
    "Gross": "Gross",

    /**
     * value: "Net"
     * @const
     */
    "Net": "Net",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other"
};


/**
 * Allowed values for the <code>FeeType</code> property.
 * @enum {String}
 * @readonly
 */
OverdraftOverdraftFeeChargeDetail['FeeTypeEnum'] = {

    /**
     * value: "ArrangedOverdraft"
     * @const
     */
    "ArrangedOverdraft": "ArrangedOverdraft",

    /**
     * value: "EmergencyBorrowing"
     * @const
     */
    "EmergencyBorrowing": "EmergencyBorrowing",

    /**
     * value: "BorrowingItem"
     * @const
     */
    "BorrowingItem": "BorrowingItem",

    /**
     * value: "OverdraftRenewal"
     * @const
     */
    "OverdraftRenewal": "OverdraftRenewal",

    /**
     * value: "AnnualReview"
     * @const
     */
    "AnnualReview": "AnnualReview",

    /**
     * value: "OverdraftSetup"
     * @const
     */
    "OverdraftSetup": "OverdraftSetup",

    /**
     * value: "Surcharge"
     * @const
     */
    "Surcharge": "Surcharge",

    /**
     * value: "TempOverdraft"
     * @const
     */
    "TempOverdraft": "TempOverdraft",

    /**
     * value: "UnauthorisedBorrowing"
     * @const
     */
    "UnauthorisedBorrowing": "UnauthorisedBorrowing",

    /**
     * value: "UnauthorisedPaidTrans"
     * @const
     */
    "UnauthorisedPaidTrans": "UnauthorisedPaidTrans",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other",

    /**
     * value: "UnauthorisedUnpaidTrans"
     * @const
     */
    "UnauthorisedUnpaidTrans": "UnauthorisedUnpaidTrans"
};



export default OverdraftOverdraftFeeChargeDetail;

