/**
 * Yapily API
 * To access endpoints that require authentication, use your application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * The version of the OpenAPI document: 0.0.160
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CurrencyExchange model module.
 * @module model/CurrencyExchange
 * @version 0.0.161
 */
class CurrencyExchange {
    /**
     * Constructs a new <code>CurrencyExchange</code>.
     * @alias module:model/CurrencyExchange
     */
    constructor() { 
        
        CurrencyExchange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CurrencyExchange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CurrencyExchange} obj Optional instance to populate.
     * @return {module:model/CurrencyExchange} The populated <code>CurrencyExchange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CurrencyExchange();

            if (data.hasOwnProperty('sourceCurrency')) {
                obj['sourceCurrency'] = ApiClient.convertToType(data['sourceCurrency'], 'String');
            }
            if (data.hasOwnProperty('targetCurrency')) {
                obj['targetCurrency'] = ApiClient.convertToType(data['targetCurrency'], 'String');
            }
            if (data.hasOwnProperty('unitCurrency')) {
                obj['unitCurrency'] = ApiClient.convertToType(data['unitCurrency'], 'String');
            }
            if (data.hasOwnProperty('exchangeRate')) {
                obj['exchangeRate'] = ApiClient.convertToType(data['exchangeRate'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * ISO 4217 currency code denoting the currency of the creditor
 * @member {String} sourceCurrency
 */
CurrencyExchange.prototype['sourceCurrency'] = undefined;

/**
 * ISO 4217 currency code denoting the currency of the debtor
 * @member {String} targetCurrency
 */
CurrencyExchange.prototype['targetCurrency'] = undefined;

/**
 * ISO 4217 currency code denoting the currency used to set the exchange rate (GBP is the unit currency in the conversion of 1 GBP = x CUR)
 * @member {String} unitCurrency
 */
CurrencyExchange.prototype['unitCurrency'] = undefined;

/**
 * Currency exchange rate
 * @member {Number} exchangeRate
 */
CurrencyExchange.prototype['exchangeRate'] = undefined;






export default CurrencyExchange;

