/**
 * Yapily API
 * To access endpoints that require authentication, use your application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * The version of the OpenAPI document: 0.0.160
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OtherType from './OtherType';

/**
 * The EligibilityOtherEligibility model module.
 * @module model/EligibilityOtherEligibility
 * @version 0.0.161
 */
class EligibilityOtherEligibility {
    /**
     * Constructs a new <code>EligibilityOtherEligibility</code>.
     * Other eligibility which is not covered by the main eligibility of the PCA product
     * @alias module:model/EligibilityOtherEligibility
     */
    constructor() { 
        
        EligibilityOtherEligibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EligibilityOtherEligibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EligibilityOtherEligibility} obj Optional instance to populate.
     * @return {module:model/EligibilityOtherEligibility} The populated <code>EligibilityOtherEligibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EligibilityOtherEligibility();

            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Indicator')) {
                obj['Indicator'] = ApiClient.convertToType(data['Indicator'], 'Boolean');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Notes')) {
                obj['Notes'] = ApiClient.convertToType(data['Notes'], ['String']);
            }
            if (data.hasOwnProperty('OtherType')) {
                obj['OtherType'] = OtherType.constructFromObject(data['OtherType']);
            }
            if (data.hasOwnProperty('Period')) {
                obj['Period'] = ApiClient.convertToType(data['Period'], 'String');
            }
            if (data.hasOwnProperty('Textual')) {
                obj['Textual'] = ApiClient.convertToType(data['Textual'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Amount
 */
EligibilityOtherEligibility.prototype['Amount'] = undefined;

/**
 * @member {String} Description
 */
EligibilityOtherEligibility.prototype['Description'] = undefined;

/**
 * @member {Boolean} Indicator
 */
EligibilityOtherEligibility.prototype['Indicator'] = undefined;

/**
 * @member {String} Name
 */
EligibilityOtherEligibility.prototype['Name'] = undefined;

/**
 * @member {Array.<String>} Notes
 */
EligibilityOtherEligibility.prototype['Notes'] = undefined;

/**
 * @member {module:model/OtherType} OtherType
 */
EligibilityOtherEligibility.prototype['OtherType'] = undefined;

/**
 * @member {module:model/EligibilityOtherEligibility.PeriodEnum} Period
 */
EligibilityOtherEligibility.prototype['Period'] = undefined;

/**
 * @member {String} Textual
 */
EligibilityOtherEligibility.prototype['Textual'] = undefined;

/**
 * @member {module:model/EligibilityOtherEligibility.TypeEnum} Type
 */
EligibilityOtherEligibility.prototype['Type'] = undefined;





/**
 * Allowed values for the <code>Period</code> property.
 * @enum {String}
 * @readonly
 */
EligibilityOtherEligibility['PeriodEnum'] = {

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day",

    /**
     * value: "Half Year"
     * @const
     */
    "Half Year": "Half Year",

    /**
     * value: "Month"
     * @const
     */
    "Month": "Month",

    /**
     * value: "Quarter"
     * @const
     */
    "Quarter": "Quarter",

    /**
     * value: "Week"
     * @const
     */
    "Week": "Week",

    /**
     * value: "AcademicTerm"
     * @const
     */
    "AcademicTerm": "AcademicTerm",

    /**
     * value: "Year"
     * @const
     */
    "Year": "Year"
};


/**
 * Allowed values for the <code>Type</code> property.
 * @enum {String}
 * @readonly
 */
EligibilityOtherEligibility['TypeEnum'] = {

    /**
     * value: "DirectDebits"
     * @const
     */
    "DirectDebits": "DirectDebits",

    /**
     * value: "ExistingCustomers"
     * @const
     */
    "ExistingCustomers": "ExistingCustomers",

    /**
     * value: "MinimumOperatingBalance"
     * @const
     */
    "MinimumOperatingBalance": "MinimumOperatingBalance",

    /**
     * value: "MinimumDeposit"
     * @const
     */
    "MinimumDeposit": "MinimumDeposit",

    /**
     * value: "NewCustomersOnly"
     * @const
     */
    "NewCustomersOnly": "NewCustomersOnly",

    /**
     * value: "PreviousBankruptcyAllowed"
     * @const
     */
    "PreviousBankruptcyAllowed": "PreviousBankruptcyAllowed",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other",

    /**
     * value: "StudentsOnly"
     * @const
     */
    "StudentsOnly": "StudentsOnly",

    /**
     * value: "SoleStudentAccount"
     * @const
     */
    "SoleStudentAccount": "SoleStudentAccount",

    /**
     * value: "SoleUkAccount"
     * @const
     */
    "SoleUkAccount": "SoleUkAccount",

    /**
     * value: "SwitchersOnly"
     * @const
     */
    "SwitchersOnly": "SwitchersOnly",

    /**
     * value: "UCASFulltimeTwoYears"
     * @const
     */
    "UCASFulltimeTwoYears": "UCASFulltimeTwoYears"
};



export default EligibilityOtherEligibility;

