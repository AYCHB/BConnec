/**
 * Yapily REST API Explorer
 * To access endpoints that require authentication, use your Application <b>key</b> and <b>secret</b> created on the <a href=https://dashboard.yapily.com/ target=_blank>Dashboard</a>
 *
 * OpenAPI spec version: 0.0.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApplicationUser'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ApplicationUser'));
  } else {
    // Browser globals (root is window)
    if (!root.YapilyRestApiExplorer) {
      root.YapilyRestApiExplorer = {};
    }
    root.YapilyRestApiExplorer.YapilyApplicationsUsersApi = factory(root.YapilyRestApiExplorer.ApiClient, root.YapilyRestApiExplorer.ApplicationUser);
  }
}(this, function(ApiClient, ApplicationUser) {
  'use strict';

  /**
   * YapilyApplicationsUsers service.
   * @module api/YapilyApplicationsUsersApi
   * @version 0.0.2
   */

  /**
   * Constructs a new YapilyApplicationsUsersApi. 
   * @alias module:api/YapilyApplicationsUsersApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addUserUsingPOST operation.
     * @callback module:api/YapilyApplicationsUsersApi~addUserUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * addUser
     * @param {module:model/ApplicationUser} applicationUser applicationUser
     * @param {module:api/YapilyApplicationsUsersApi~addUserUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationUser}
     */
    this.addUserUsingPOST = function(applicationUser, callback) {
      var postBody = applicationUser;

      // verify the required parameter 'applicationUser' is set
      if (applicationUser === undefined || applicationUser === null) {
        throw new Error("Missing the required parameter 'applicationUser' when calling addUserUsingPOST");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ApplicationUser;

      return this.apiClient.callApi(
        '/users', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getUserUsingGET operation.
     * @callback module:api/YapilyApplicationsUsersApi~getUserUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getUser
     * @param {String} uuid uuid
     * @param {module:api/YapilyApplicationsUsersApi~getUserUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationUser}
     */
    this.getUserUsingGET = function(uuid, callback) {
      var postBody = null;

      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling getUserUsingGET");
      }


      var pathParams = {
        'uuid': uuid
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ApplicationUser;

      return this.apiClient.callApi(
        '/users/{uuid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsersUsingGET operation.
     * @callback module:api/YapilyApplicationsUsersApi~getUsersUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApplicationUser>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getUsers
     * @param {module:api/YapilyApplicationsUsersApi~getUsersUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApplicationUser>}
     */
    this.getUsersUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = [ApplicationUser];

      return this.apiClient.callApi(
        '/users', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUserUsingPUT operation.
     * @callback module:api/YapilyApplicationsUsersApi~updateUserUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateUser
     * @param {String} uuid uuid
     * @param {module:model/ApplicationUser} applicationUser applicationUser
     * @param {module:api/YapilyApplicationsUsersApi~updateUserUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationUser}
     */
    this.updateUserUsingPUT = function(uuid, applicationUser, callback) {
      var postBody = applicationUser;

      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling updateUserUsingPUT");
      }

      // verify the required parameter 'applicationUser' is set
      if (applicationUser === undefined || applicationUser === null) {
        throw new Error("Missing the required parameter 'applicationUser' when calling updateUserUsingPUT");
      }


      var pathParams = {
        'uuid': uuid
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ApplicationUser;

      return this.apiClient.callApi(
        '/users/{uuid}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
