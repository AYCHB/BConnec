/**
 * Yapily API
 * To access endpoints that require authentication, use your application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * The version of the OpenAPI document: 0.0.161
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiResponseOfListOfATMOpenDataResponse from '../model/ApiResponseOfListOfATMOpenDataResponse';
import ApiResponseOfListOfPersonalCurrentAccountData from '../model/ApiResponseOfListOfPersonalCurrentAccountData';

/**
* InstitutionsOpenData service.
* @module api/InstitutionsOpenDataApi
* @version 0.0.161
*/
export default class InstitutionsOpenDataApi {

    /**
    * Constructs a new InstitutionsOpenDataApi. 
    * @alias module:api/InstitutionsOpenDataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getATMDataUsingGET operation.
     * @callback module:api/InstitutionsOpenDataApi~getATMDataUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiResponseOfListOfATMOpenDataResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves data about all ATMs of the selected institution
     * @param {String} institutionId institutionId
     * @param {module:api/InstitutionsOpenDataApi~getATMDataUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiResponseOfListOfATMOpenDataResponse}
     */
    getATMDataUsingGET(institutionId, callback) {
      let postBody = null;
      // verify the required parameter 'institutionId' is set
      if (institutionId === undefined || institutionId === null) {
        throw new Error("Missing the required parameter 'institutionId' when calling getATMDataUsingGET");
      }

      let pathParams = {
        'institutionId': institutionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = ApiResponseOfListOfATMOpenDataResponse;
      return this.apiClient.callApi(
        '/institutions/{institutionId}/atms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPersonalCurrentAccountsUsingGET operation.
     * @callback module:api/InstitutionsOpenDataApi~getPersonalCurrentAccountsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiResponseOfListOfPersonalCurrentAccountData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves details of personal current accounts for an institution
     * @param {String} institutionId institutionId
     * @param {module:api/InstitutionsOpenDataApi~getPersonalCurrentAccountsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiResponseOfListOfPersonalCurrentAccountData}
     */
    getPersonalCurrentAccountsUsingGET(institutionId, callback) {
      let postBody = null;
      // verify the required parameter 'institutionId' is set
      if (institutionId === undefined || institutionId === null) {
        throw new Error("Missing the required parameter 'institutionId' when calling getPersonalCurrentAccountsUsingGET");
      }

      let pathParams = {
        'institutionId': institutionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = ApiResponseOfListOfPersonalCurrentAccountData;
      return this.apiClient.callApi(
        '/institutions/{institutionId}/personal-current-accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
